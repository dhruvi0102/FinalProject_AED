/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SystemAdmin;

import model.EcoSystem;
import model.PoliceDepartment.PoliceDepartment;
import model.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Font;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import model.PoliceDepartment.PoliceDepartmentDirectory;
import model.Role.PoliceDepartmentAdmin;
/**
 *
 * @author aishw
 */
public class ManagePoliceDepartmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePoliceDepartmentJPanel
     */
    
    JPanel userProcessContainer;
    UserAccount userAccount;
    EcoSystem ecoSystem;

    public ManagePoliceDepartmentJPanel(JPanel userProcessContainer, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        populateEntityTable();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lbluname = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblPass = new javax.swing.JLabel();
        txtPass = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtUname = new javax.swing.JTextField();
        btn_submit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        entityTable = new javax.swing.JTable();
        btnDel = new javax.swing.JButton();
        lblAvailability = new javax.swing.JLabel();
        chbStatus = new javax.swing.JCheckBox();
        updateInfobtn = new javax.swing.JButton();
        confirmUpdateBtn = new javax.swing.JButton();
        Backbtn = new javax.swing.JButton();
        lbl_policedept = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblName.setText("Name");
        jPanel1.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 67, -1));
        jPanel1.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 270, 238, 48));

        lbluname.setText("Username");
        jPanel1.add(lbluname, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 190, 72, 20));
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 140, 240, -1));

        lblPass.setText("Password");
        jPanel1.add(lblPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 230, 81, -1));

        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });
        jPanel1.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 220, 240, -1));

        lblAddress.setText("Address");
        jPanel1.add(lblAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 81, 19));

        txtUname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUnameActionPerformed(evt);
            }
        });
        jPanel1.add(txtUname, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 180, 240, -1));

        btn_submit.setText("Create");
        btn_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_submitActionPerformed(evt);
            }
        });
        jPanel1.add(btn_submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 403, 120, 20));

        entityTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Station/ Precint Name", "Username", "Password"
            }
        ));
        jScrollPane1.setViewportView(entityTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 490, 789, 107));

        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        jPanel1.add(btnDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 630, 110, -1));

        lblAvailability.setText("Availability");
        jPanel1.add(lblAvailability, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 350, -1, -1));

        chbStatus.setText("Yes");
        chbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbStatusActionPerformed(evt);
            }
        });
        jPanel1.add(chbStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 350, -1, -1));

        updateInfobtn.setText("Update");
        updateInfobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInfobtnActionPerformed(evt);
            }
        });
        jPanel1.add(updateInfobtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 630, -1, -1));

        confirmUpdateBtn.setText("Confirm Update");
        confirmUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmUpdateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(confirmUpdateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 630, -1, -1));

        Backbtn.setText("<--Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });
        jPanel1.add(Backbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 30, 140, -1));

        lbl_policedept.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        lbl_policedept.setForeground(new java.awt.Color(119, 10, 40));
        lbl_policedept.setText("Police Department");
        jPanel1.add(lbl_policedept, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 200, 20));

        jLabel7.setText("Please add Police Department details to add to list of Enterprises:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/MainFrame.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void txtUnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUnameActionPerformed

    private void btn_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_submitActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String uname = txtUname.getText();
        String password = txtPass.getText();
        String address = txtAddress.getText();
        Boolean status = chbStatus.isSelected();
        System.out.print("chbStatus"+chbStatus.isSelected());

       UserAccount acc = ecoSystem.getUserAccountDirectory().addUserAccount(name, uname, password, null, new PoliceDepartmentAdmin());
       //UserAccount acc = ecoSystem.getUserAccountDirectory().createUserAccount(name, uname, password, null, new PoliceDeptAdmin());
        PoliceDepartmentDirectory policedeptdir = ecoSystem.getPoliceDeptDirectory();

        PoliceDepartment policeDept = null;

        if (ecoSystem.getPoliceDeptDirectory()==null)
        {
            policeDept = new PoliceDepartment(name, uname, address, status);
            policedeptdir.getPoliceDepartment().add(policeDept);
        }
        else {
            policeDept = ecoSystem.getPoliceDeptDirectory().createPoliceDeptartment(name, uname, address, status);
            System.out.println("name :::" + policeDept.getUserName());
        }

        populateEntityTable();
    }//GEN-LAST:event_btn_submitActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
        int selectedRow = entityTable.getSelectedRow();
        if (selectedRow >= 0) {
            String name = (String) entityTable.getValueAt(selectedRow, 0);
            String uname = (String) entityTable.getValueAt(selectedRow, 1);
            String password = (String) entityTable.getValueAt(selectedRow, 2);
            int selectionButton = JOptionPane.YES_NO_OPTION;
            String warningMessage = "Are you sure you want to delete the user [PoliceDept] - " + name.toUpperCase() + " ?";
            int selectionResult = JOptionPane.showConfirmDialog(null, warningMessage, "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                UserAccount user = ecoSystem.getUserAccountDirectory().authenticateUser(uname, password);
                ecoSystem.getUserAccountDirectory().deleteUserAccount(user);
                //ecoSystem.getPoliceDeptDirectory().deleteShelter(user.getUsername());
                ecoSystem.getPoliceDeptDirectory().deleteDeptartment(uname);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
        populateEntityTable();
    }//GEN-LAST:event_btnDelActionPerformed

    private void chbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chbStatusActionPerformed

    private void updateInfobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInfobtnActionPerformed
        // TODO add your handling code here:
        int selectRow = entityTable.getSelectedRow();

        if(selectRow>=0){
            String username= (String) entityTable.getValueAt(selectRow, 1);
            String pwd= (String) entityTable.getValueAt(selectRow, 2);
            userAccount=ecoSystem.getUserAccountDirectory().authenticateUser(username, pwd);

            txtName.setText(userAccount.getName()+"");
            txtUname.setText(userAccount.getUsername()+"");
            txtPass.setText(userAccount.getPassword()+"");
            // system.getUserAccountDirectory().deleteUserAccount(user);

        }
        else {
            JOptionPane.showMessageDialog(null,"Please select a row");
        }
        btn_submit.setEnabled(false);
        btnDel.setEnabled(false);
        updateInfobtn.setEnabled(false);
        confirmUpdateBtn.setEnabled(true);
    }//GEN-LAST:event_updateInfobtnActionPerformed

    private void confirmUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmUpdateBtnActionPerformed
        // TODO add your handling code here:

        String name = txtName.getText();
        String uname=txtUname.getText();
        String password=txtPass.getText();

        try {
            if(name==null || name.isEmpty()){
                throw new NullPointerException(" Name field is Empty");

            }else if(name.length()<5 || Pattern.matches("^[A-Za-z]+$", name)==false){
                throw new Exception("Please enter valid  Name");

            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, " Name is Empty");

            return;

        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "  Name is invalid");

            return;
        }

        try {
            if(uname==null || uname.isEmpty()){
                throw new NullPointerException("User Name field is Empty");

            }else if(uname.length()<5){
                throw new Exception("Please enter valid User Name");

            }
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "User Name is Empty");

            return;

        }catch (Exception e){
            JOptionPane.showMessageDialog(null, " User Name is invalid");

            return;
        }

        try {

            if(password==null || password.isEmpty()){
                throw new NullPointerException("Pwd field is Empty");
            }else if(Pattern.matches("^(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{5,30}$", password)==false){
                throw new Exception("Invalid Password");
            }

        }  catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Password is Empty");

            return;
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Password is of invalid pattern");

            return;
        }

        if (ecoSystem.getUserAccountDirectory().IsUsernameUnique(uname)==false) {
            JOptionPane.showMessageDialog(null,"  User Name already exists ");
        }else{

            ecoSystem.getUserAccountDirectory().updateUserAccount(userAccount,name,uname,password);
            populateEntityTable();
            btn_submit.setEnabled(true);
            btnDel.setEnabled(true);
            updateInfobtn.setEnabled(true);
            confirmUpdateBtn.setEnabled(false);
            txtName.setText("");
            txtUname.setText("");
            txtPass.setText("");
        }
    }//GEN-LAST:event_confirmUpdateBtnActionPerformed

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        //        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        //        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btn_submit;
    private javax.swing.JCheckBox chbStatus;
    private javax.swing.JButton confirmUpdateBtn;
    private javax.swing.JTable entityTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAvailability;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lbl_policedept;
    private javax.swing.JLabel lbluname;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtUname;
    private javax.swing.JButton updateInfobtn;
    // End of variables declaration//GEN-END:variables

    private void populateEntityTable() {
        
  DefaultTableModel model = (DefaultTableModel) entityTable.getModel();
        JTableHeader th = entityTable.getTableHeader();
        th.setFont(new Font("Serif", Font.BOLD, 15));
        model.setRowCount(0);
	System.out.println("ecoSystemecoSystem" + ecoSystem + ecoSystem.getUserAccountDirectory().getUserAccountList());
        for (UserAccount user : ecoSystem.getUserAccountDirectory().getUserAccountList()) {
            System.err.println("userrrr: " + user.getRole().getClass().getName());
            if ("Business.Role.PolicDepartmentAdmin".equals(user.getRole().getClass().getName())) {
                
                Object[] row = new Object[3];

                row[0] = user.getName();
                row[1] = user.getUsername();
                row[2] = user.getPassword();

                model.addRow(row);
     //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        }
    }
}
